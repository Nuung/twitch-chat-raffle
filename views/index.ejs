<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="stylesheets/style.css">
    <link rel="stylesheet" href="library/bootstrap/css/bootstrap.min.css">
    <script src="library/jquery/jquery.min.js"></script>
    <script src="library/sweetalert.min.js"></script>
    <title>Twitch Chat Raffle</title>
</head>
<body>
    <div class="main">
        <div>
            <h1>개백수 7호의 채팅 라플 리더보드</h1>
            <button id="init-btn" type="button" class="btn action-btn" >Init</button>
            <button id="onoff-btn" type="button" class="btn action-btn" >On/Off</button>
            <button id="setting-btn" type="button" class="btn action-btn" data-toggle="modal"
                data-target="#settingModal">Setting</button><!-- Button trigger modal -->
            <button id="raffle-btn" type="button" class="btn action-btn">Raffle</button>
        </div>
        <!-- <ul class="list-group list-group-horizontal">
            <li class="list-group-item">#1</li>
            <li class="list-group-item">qlgks1</li>
            <li class="list-group-item">50</li>
        </ul> -->
    </div>

    <!-- Modal -->
    <div class="modal fade" id="settingModal" tabindex="-1" role="dialog" aria-labelledby="settingModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="settingModalLabel">기본 설정 사항</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <form id="setting-request-form">
                        <div class="form-group">
                            <label for="input-nick-name" class="col-form-label">Nick Name:</label>
                            <input type="text" class="form-control" id="input-nick-name">
                        </div>
                        <div class="form-group">
                            <label for="input-oauth-token" class="col-form-label">OAuth Token:</label>
                            <input type="text" class="form-control" id="input-oauth-token"></input>
                        </div>
                        <div class="form-group">
                            <label for="input-channel-name" class="col-form-label">Channel Name:</label>
                            <input type="text" class="form-control" id="input-channel-name"></input>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button id="setting-request-btn" type="button" class="btn btn-primary">Update</button>
                </div>
            </div>
        </div>
    </div>
    <script src="library/bootstrap/js/bootstrap.min.js"></script>
</body>
<script>

    // Get Readey
    // document.addEventListener("DOMContentLoaded", function () {
    //     init();
    // });

    // GET static DOM 
    const randerTarget = document.querySelector(".main");
    const initBtn = document.getElementById("init-btn");
    const onoffBtn = document.getElementById("onoff-btn");
    const settingBtn = document.getElementById("setting-btn");
    const raffleBtn = document.getElementById("raffle-btn");

    // AJAX Custom
    function ajaxCustom(url, type, next) {
        $.ajax({
            url: url,
            type: type,
            dataType: 'json',
            success: function (response) {
                next(response);
            },
            error: function (e) {
                swal("Fail", `${e['result']}!`, "error");
            }
        });
    }


    // chat-log-li 에는 this(target-data-id) key에 따른 채팅 로그 pop up
    function addChatRequest() {
        // Get ALL Target DOM
        const targetList = document.querySelectorAll(".chat-log-li");
        // add Event
        targetList.forEach(target => {
            target.addEventListener('click', (event) => {
                // WAIT MODAL 
                swal("·····WAIT·····");

                const targetId = event.target.getAttribute('target-data-id');
                ajaxCustom(`/api/chat/${targetId}`, "GET", (response) => {

                    // make list of chat by str
                    let listOfChat = "";
                    for (let i = 0; i < response['result'].length; i++) {
                        const element = response['result'][i];
                        listOfChat += `${element['dt']} : ${element['message']} \n`;
                    }

                    // success
                    swal(`${targetId}'s Chat List`, `${listOfChat}`);
                });
            });
        })
    }

    // chat-cnt-li 에는 this(target-data-id) key에 따른 cnt update가능

    // init 
    initBtn.addEventListener('click', () => {
        ajaxCustom("/api/init", "DELETE", (response) => {
            swal("Success", `${response['result']}`, "success");
        });
    });

    // on / off -> /api/onoff with body.status


    // setting -> /api/config with body
    // setting-request-form -> input-nick-name / input-oauth-token / input-channel-name
    settingBtn.addEventListener('click', () => {
        ajaxCustom("/api/config", "GET", (response) => {
            // 1. get and setting up information
            const targetModal = document.getElementById("settingModal");
            targetModal.querySelector("#input-nick-name").value = response['result']['nick_name'];
            targetModal.querySelector("#input-oauth-token").value = response['result']['oauth_token'];
            targetModal.querySelector("#input-channel-name").value = response['result']['channel_name'];

        });
    });
    document.getElementById("setting-request-btn").addEventListener('click', () => {
        const formData = document.getElementById("setting-request-form");
        // request for config update
        $.ajax({
            url: '/api/config',
            type: 'PUT',
            dataType: 'json',
            data: {
                nick_name: formData.querySelector("#input-nick-name").value,
                oauth_token: formData.querySelector("#input-oauth-token").value,
                channel_name: formData.querySelector("#input-channel-name").value,
            },
            success: function (response) {
                swal("Success", `${response['result']}`, "success");
            },
            error: function (e) {
                swal("Fail", `${e['result']}!`, "error");
            }
        });
    });



    // raffle ~ run python3 process
    raffleBtn.addEventListener('click', () => {
        ajaxCustom("/api/raffle", "GET", (response) => {
            swal("Success", `${response['result']}`, "success");
        });
    });

    // Long Polling
    /*
     https://developer.mozilla.org/ko/docs/Glossary/IIFE
     데이터베이스 처리중 커넥션 풀 기법이 있는데 비슷한 개념이다. 
     서버와 접속을 열어둔 상태에서 요청이 오면 바로 바로 처리한다. 
     요청이 없을시에는 리소스를 거의 먹지않는다.
    */
    (function boardUpdate() {
        $.ajax({
            url: '/api/live',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                // 1. main의 ul 모두 삭제
                const targetUl = randerTarget.querySelectorAll('ul');
                for (let i = 0; i < targetUl.length; i++) targetUl[i].remove();

                // 2. 받아온 result 값 value기반으로 정렬 
                const sortedResult = Object.entries(response['result'])
                    .sort(([, a], [, b]) => b - a)
                    .reduce((r, [k, v]) => ({ ...r, [k]: v }), {});

                // 3. 정렬된 값 기준으로 랜더링 
                let cnt = 1; // rank
                for (const [key, value] of Object.entries(sortedResult)) {
                    $('div.main').append(
                        `
                        <ul class="list-group list-group-horizontal leader-board-list">
                            <li class="list-group-item"># ${cnt++}</li>
                            <li class="list-group-item chat-log-li" target-data-id="${key}">${key}</li>
                            <li class="list-group-item chat-cnt-li" target-data-id="${key}">${value}</li>
                        </ul>
                        `
                    );
                }

                // 4. add event
                addChatRequest();
            },
            error: function (e) {
                // console.log("ERROR : ", e);
            },
            timeout: 2000,
            complete: setTimeout(function () { boardUpdate(); }, 3000)
        })
    })();
</script>

</html>